#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )

${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}
${symbol_pound}${symbol_pound}  Deployment properties
${symbol_pound}${symbol_pound}     These properties affect the nature of deployment by the build script.
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}

${symbol_pound}is.local.build=true

is.clustered=false

${symbol_pound} Set these to false to disable any of the optional KFS modules
module.labor.distribution.enabled=true
module.accounts.receivable.enabled=true
module.purchasing.enabled=true
module.capital.asset.enabled=true
module.endowment.enabled=true

${symbol_pound} The following optional ${parentArtifactId} modules are related, only one can be set to true or both to false.
module.contracts.and.grants.enabled=true
module.external.kuali.coeus.enabled=false

${symbol_pound} Set this to true to turn on the accounting-line access security system
${symbol_pound} This overrides some components in the core modules and labor distribution
module.access.security.enabled=false

${symbol_pound} Set the property below to add additional properties to the 
${symbol_pound} configuration.properties file that is deployed with the application.
${symbol_pound} It will be tokenized using the same properties available to 
${symbol_pound} build/project/configuration.properties.
institutional.configuration.file=

${symbol_pound} allows insertion of custom content into the tomcat context file
custom.context.content=


${symbol_pound} the core configuration property files that should be available in the KualiConfigurationService context, along with configuration.properties
core.property.files=classpath:KR-ApplicationResources.properties,${symbol_escape}
classpath:ApplicationResources.properties,${symbol_escape}
classpath:org/kuali/${parentArtifactId}/sec/messages-sec.properties

${symbol_pound} the institution specific configuration property files that should be available in the KualiConfigurationService context, along with configuration.properties
institution.property.files=
${symbol_pound} all the configuration property files that should be available in the KualiConfigurationService context, along with configuration.properties
property.files=${symbol_dollar}{core.property.files}${symbol_dollar}{institution.property.files}

${symbol_pound} the core configuration property files that should be added to the KualiConfigurationService context for unit testing
core.property.test.files=classpath:test-configuration.properties
${symbol_pound} the institution specific configuration property files that should be added to the KualiConfigurationService context for unit testing
institution.property.test.files=
${symbol_pound} all the configuration property files that should be added to the KualiConfigurationService context for unit testing
property.test.files=${symbol_dollar}{core.property.test.files}${symbol_dollar}{institution.property.test.files}

feedback.link.url=https://test.kuali.org/jira/secure/CreateIssue.jspa?pid=10091&amp;issuetype=1
licensing.contact.email=license@kuali.org


${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}
${symbol_pound}${symbol_pound}  Various properties used by the build process
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}

non.java.resources=**/*.properties,${symbol_escape}
**/*.dtd,${symbol_escape}
**/*.xml,${symbol_escape}
**/*.html,${symbol_escape}
**/*.xsd,${symbol_escape}
**/*.jasper,${symbol_escape}
**/*.jrxml,${symbol_escape}
META-INF/*

tests.non.java.resources=${symbol_dollar}{non.java.resources},${symbol_escape}
**/*.txt,${symbol_escape}
**/*.sql

${symbol_pound} miscellaneous build.xml configuration

compile.min.memory=128M
compile.max.memory=512M

run.tests.min.memory=384M
run.tests.max.memory=1024M
run.tests.max.permsize=128M

run.postloadencrypt.min.memory=384M
run.postloadencrypt.max.memory=1024M
run.postloadencrypt.max.permsize=256M

tests.includes=**/*Test.java
tests.startup.class=ContinuousIntegrationStartup
tests.shutdown.class=ContinuousIntegrationShutdown

tests.compile.includes=**/*.java
tests.compile.excludes=

javadoc.max.memory=512M

${symbol_pound} determines what ${symbol_dollar}{build.environment} the KualiConfigurationService considers your production environment
production.environment.code=prd

${symbol_pound} KFS Report Writer Service
report.writer.service.new.line.characters=${symbol_escape}${symbol_escape}n

${parentArtifactId}.locale=en_US

${symbol_pound} This will either enable or disable the KC web-service used to create a CG account.
accountCreationServiceSOAP.expose=true

${symbol_pound} indicates whether schema files should be rebuilt or not
${symbol_pound}dont.filter.project.schema=

${symbol_pound} indicates whether schema validation should be built from data dictionary, otherwise validation is basic xsd types only
use.dd.schema.validation=false

classpath.prefix=<?xml version="1.0" encoding="UTF-8"?>${symbol_escape}n${symbol_escape}
<classpath>${symbol_escape}n${symbol_escape}
${symbol_escape}t<classpathentry kind="src" path="work/src"/>${symbol_escape}n${symbol_escape}
${symbol_escape}t<classpathentry kind="src" output="test/classes" path="test/infrastructure/src"/>${symbol_escape}n${symbol_escape}
${symbol_escape}t<classpathentry kind="src" output="test/classes" path="test/unit/src"/>${symbol_escape}n${symbol_escape}
${symbol_escape}t<classpathentry kind="src" output="test/classes" path="test/integration/src"/>${symbol_escape}n${symbol_escape}
${symbol_escape}t<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6">${symbol_escape}n${symbol_escape}
${symbol_escape}t${symbol_escape}t<accessrules>${symbol_escape}n${symbol_escape}
${symbol_escape}t${symbol_escape}t${symbol_escape}t<accessrule kind="nonaccessible" pattern="com/**"/>${symbol_escape}n${symbol_escape}
${symbol_escape}t${symbol_escape}t${symbol_escape}t<accessrule kind="nonaccessible" pattern="sun/**"/>${symbol_escape}n${symbol_escape}
${symbol_escape}t${symbol_escape}t${symbol_escape}t<accessrule kind="nonaccessible" pattern="sunw/**"/>${symbol_escape}n${symbol_escape}
${symbol_escape}t${symbol_escape}t</accessrules>${symbol_escape}n${symbol_escape}
${symbol_escape}t</classpathentry>${symbol_escape}n
	
classpath.suffix=${symbol_escape}t<classpathentry kind="output" path="work/web-root/WEB-INF/classes"/>${symbol_escape}n${symbol_escape}
</classpath>${symbol_escape}n

${symbol_pound} These are JAR files which we want to exclude from the Rice project because they
${symbol_pound} either:
${symbol_pound}   1) are old (unused even by Rice)
${symbol_pound}   2) are problems with the Rice classpath we don't want to inherit
${symbol_pound}   3) are older than the version that KFS is currently using
rice.lib.jars.to.exclude=**/rice-*,${symbol_escape}
**/cas-2*,${symbol_escape}
**/casclient-2*,${symbol_escape}
**/cas-server*,${symbol_escape}
**/acegi*,${symbol_escape}
**/commons-digester*,${symbol_escape}
**/dwr*,${symbol_escape}
**/log4j*,${symbol_escape}
**/xml-apis-*,${symbol_escape}
**/derby*,${symbol_escape}
**/commons-pool-*,${symbol_escape}
**/commons-dbcp-*,${symbol_escape}
**/ant-*.jar,${symbol_escape}
**/hsqldb-*.jar,${symbol_escape}
**/torque-*.jar,${symbol_escape}
**/velocity-*.jar,${symbol_escape}
**/p6spy-*.jar

${symbol_pound} These are libraries which should not be referenced in KFS code.  They need to be
${symbol_pound} there for runtime testing, but their classes should not be referenced in KFS code.
runtime.only.jars=abdera*.jar,${symbol_escape}
activation*.jar,${symbol_escape}
aopalliance*.jar,${symbol_escape}
asm*.jar,${symbol_escape}
avalon*.jar,${symbol_escape}
backport*.jar,${symbol_escape}
batik*.jar,${symbol_escape}
bcprov*.jar,${symbol_escape}
cas*.jar,${symbol_escape}
cglib*.jar,${symbol_escape}
commons-dbcp-*.jar,${symbol_escape}
commons-el*.jar,${symbol_escape}
commons-httpclient-*.jar,${symbol_escape}
commons-pool-*.jar,${symbol_escape}
connector-api*.jar,${symbol_escape}
geronimo*.jar,${symbol_escape}
hibernate*.jar,${symbol_escape}
jasper-*.jar,${symbol_escape}
jaxen*.jar,${symbol_escape}
jboss*.jar,${symbol_escape}
jdom*.jar,${symbol_escape}
jotm*.jar,${symbol_escape}
mysql*.jar,${symbol_escape}
ojdbc*.jar,${symbol_escape}
opensaml*.jar,${symbol_escape}
p6spy*.jar,${symbol_escape}
saaj-impl*.jar,${symbol_escape}
struts-el*.jar,${symbol_escape}
taglibs*.jar,${symbol_escape}
wsdl4j*.jar,${symbol_escape}
wss4j*.jar,${symbol_escape}
wstx*.jar,${symbol_escape}
xalan-serializer*.jar,${symbol_escape}
xapool*.jar,${symbol_escape}
xml-resolver*.jar,${symbol_escape}
XmlSchema*.jar,${symbol_escape}
xmlsec*.jar,${symbol_escape}
xpp3*.jar
