#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )

${symbol_pound} This property sets KFS to configure itself to work with a standalone Rice instance 
rice.standalone=false

${symbol_pound} Sets the build process to install a Rice instance locally in the development Tomcat server
deploy.local.rice.server=false

${symbol_pound} rice.url is set dynamically in build.xml based on the rice.standalone flag
${symbol_pound} If using any other application server besides the one containing KFS, you will need
${symbol_pound} to set this in your ${parentArtifactId}-build.properties
${symbol_pound} rice.url=https://somehostname.sampleu.edu/kr-dev

rice.config.property.file=${symbol_dollar}{appserver.home}/conf/rice-config.xml

rice.server.datasource.username=${symbol_dollar}{datasource.username}
rice.server.datasource.password=${symbol_dollar}{datasource.password}
rice.server.datasource.pool.size=${symbol_dollar}{datasource.pool.size}
rice.server.datasource.connection.timeout=${symbol_dollar}{datasource.connection.timeout}
rice.server.datasource.validating.query=${symbol_dollar}{datasource.validating.query}
rice.server.datasource.maximum.cached.preparedstatements=${symbol_dollar}{datasource.maximum.cached.preparedstatements}

${symbol_pound} Where, on the classpath, to pull the OJB properties file for the rice components
rice.custom.ojb.properties=${symbol_dollar}{ojb.properties.file}

${symbol_pound} Base Rice version properties
rice.name=rice
${parentArtifactId}.rice.version=1.0.3.3
rice.output.licenses.suffix=-licenses.zip
rice.server.war.file.name.prefix=${symbol_dollar}{rice.name}-web-
rice.server.war.file.name=${symbol_dollar}{rice.server.war.file.name.prefix}${symbol_dollar}{${parentArtifactId}.rice.version}.war

rice.application=kr
kew.application=kew
ksb.application=ksb
kim.application=kim

${symbol_pound} the KSB always runs locally
rice.ksb.url=${symbol_dollar}{application.url}/${symbol_dollar}{ksb.application}

${symbol_pound} In a production or clustered environment, this should be the private IP 
${symbol_pound} address, port and base context name for the location of the KSB services
${symbol_pound} see the spring-rice-configurer.xml file for how this is used
${symbol_pound} This odd syntax here is to allow it to be removed completely
${symbol_pound} To use, make the value of the property "http.url=host:port/context-name" 
rice.ksb.http.url.expression=${symbol_pound} http.url=.... -- Set dynamically via a -Dhttp.url property on tomcat startup

${symbol_pound} a logical name for the ${symbol_dollar}{keystore.file}, should not need to be changed during development
keystore.alias=rice
${symbol_pound} the password that will open the keystore
keystore.password=r1c3pw
${symbol_pound} used by the DemonstrationGradeEncryptionService and the workflow EncryptionService to encrypt / decrypt data in the database
encryption.key=7IC64w6ksLU

${symbol_pound} Determines whether data should be unmasked
rice.enable.nonproduction.data.unmasking=false 

${symbol_pound} rice & notification
${symbol_pound} determines if notifications coming out of KEW should be forwarded to KEN
rice.kew.enableKENNotification=false

${symbol_pound} the files that define the struts context for the rice struts module
rice.struts.config.files=/${symbol_dollar}{rice.application}/WEB-INF/struts-config.xml
rice.kns.struts.config.files=/${symbol_dollar}{rice.application}/WEB-INF/struts-config.xml
${symbol_pound} the files that define the struts context for the kew struts module
rice.kew.struts.config.files=/${symbol_dollar}{kew.application}/WEB-INF/struts-config.xml
${symbol_pound} the path to the file containing the log4j configuration for workflow
rice.kew.log4j.settings.path=${symbol_dollar}{log4j.settings.file}
${symbol_pound} the files that define the struts context for the ksb struts module
rice.ksb.struts.config.files=/${symbol_dollar}{ksb.application}/WEB-INF/struts-config.xml
${symbol_pound} the files that define the struts context for the kim struts module
rice.kim.struts.config.files=/${symbol_dollar}{kim.application}/WEB-INF/struts-config.xml

${symbol_pound} the directory where attachments uploaded through the workflow ui are stored
rice.kew.attachment.directory=${symbol_dollar}{attachments.directory}
${symbol_pound} the directory where the xml files that define your workflow data should be stored when they are uploaded
rice.kew.xml.directory=${symbol_dollar}{staging.directory}/workflow
${symbol_pound} the frequency wih which workflow checks for new files in the xml directory
rice.kew.xml.poll.interval.secs=30
${symbol_pound} the length of time workflow waits to do the first check of the xml directory when the application starts up
rice.kew.xml.initial.delay.secs=60

${symbol_pound} globally disable or enable the outbox (screen to which there is a link in the action list that shows the documents a user has taken action on)
rice.kew.actionlist.outbox=false

${symbol_pound} Rice web service configuration
rice.kew.secure.workflowdocument.javaservice.endpoint=true
rice.kew.secure.workflowutility.javaservice.endpoint=true
rice.kew.simpleDocumentActionsService.security=true
rice.kew.secure.workflowutility.soapservice.endpoint=true
rice.kim.soapExposedService.jaxws.security=true

rice.kim.identityArchiveServiceImpl.executionIntervalSeconds=600
rice.kim.identityArchiveServiceImpl.maxWriteQueueSize=300

${symbol_pound} determines whether the workflow processes that would normally be performed asynchronously are asynchronous (async) or are synchronous instead
rice.ksb.message.delivery=async
${symbol_pound} how many times the service bus will try to send a message when it is encountering an exception that may be due to a resource outage, for example
rice.ksb.route.queue.max.retry.attempts=3
${symbol_pound} the length of time the service bus will wait before retrying after each failed attempt to send a message
rice.ksb.route.queue.time.increment=1000
${symbol_pound} the number of threads available to process service bus messages, i.e. deal with queued workflow documents
rice.ksb.thread.pool.size=20

${symbol_pound} number of seconds between each "ping" of the service bus to see what services are currently available
rice.ksb.bus.refresh.rate.seconds=120

rice.cxf.client.connectionTimeout=30000
rice.cxf.client.receiveTimeout=120000
rice.cxf.client.allowChunking=false

${symbol_pound} Set to true to prevent the application from publishing the services to a master service bus.  For use on application configurations 
${symbol_pound} that should not receive service calls from other applications.  (batch jobs and unit tests)
rice.ksb.batch.mode=false

${symbol_pound} KIM Cache Settings

rice.kim.cache.entity.max.size=3000
rice.kim.cache.entity.max.age.seconds=3600
rice.kim.cache.group.max.size=3000
rice.kim.cache.group.max.age.seconds=3600
rice.kim.cache.role.max.size=3000
rice.kim.cache.role.max.age.seconds=300
rice.kim.cache.permission.max.size=3000
rice.kim.cache.permission.max.age.seconds=30
rice.kim.cache.responsibility.max.size=3000
rice.kim.cache.responsibility.max.age.seconds=30
rice.kim.cache.person.max.size=3000
rice.kim.cache.person.max.age.seconds=3600

${symbol_pound} KIM hidden fields
rice.org.kuali.rice.kim.bo.ui.PersonDocumentEmploymentInfo.hidden=baseSalaryAmount
rice.kim.hide.PersonDocumentAddress.type=HM
rice.kim.hide.PersonDocumentPhone.type=HM
rice.kim.show.blank.qualifiers=true

${symbol_pound} KNS Cache Settings

rice.kns.cache.parameter.max.size=1000
rice.kns.cache.parameter.max.age.seconds=3600
rice.kns.cache.nonDatabaseComponent.max.size=2000
rice.kns.cache.nonDatabaseComponent.max.age.seconds=3600

rice.kns.cache.methodresult.max.size=1000
rice.kns.cache.methodresult.max.age.seconds=60
rice.kns.cache.methodresult.nocopy.max.size=1000
rice.kns.cache.methodresult.nocopy.max.age.seconds=600

rice.kns.session.document.cache.size=1000

rice.kim.cache.permission.refresh.period.seconds=3600
rice.kim.cache.role.refresh.period.seconds=3600

${symbol_pound} properties for Action List notification
rice.kew.email.reminder.lifecycle.enabled=false
rice.kew.mail.smtp.host=${symbol_dollar}{mail.relay.server}
rice.kew.mail.transport.protocol=${symbol_dollar}{mail.transport.protocol}

${symbol_pound} turn on/off daily and/or weekly workflow notifications 
rice.kew.daily.email=false
rice.kew.weekly.email=false
${symbol_pound} the cron expression defining when daily emails will be sent (default to 1AM every day) 
rice.kew.daily.email.cron.expression=0 0 1 * * ?
${symbol_pound} the cron expression defining when daily emails will be sent (default to 2AM every Monday) 
rice.kew.weekly.email.cron.expression=0 0 2 ? * 2

${symbol_pound} Needed by DWR
classpath.resource.prefix=/WEB-INF/classes/

${symbol_pound} whether to validate the DD upon startup
validate.data.dictionary=true
validate.ebo.references=true

