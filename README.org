* kfs-maven-plugin

Maven plugin for converting/creating mavenized KFS/Overlay distributions

** How does it work?

The KFS maven plugin works in 2 separate use cases

*** Create a new KFS Overlay


** Setup

*** Add the following to your $HOME/.m2/settings.xml

#+BEGIN_EXAMPLE
  <pluginGroups>
    <pluginGroup>org.kualigan.maven.plugins</pluginGroup>
  </pluginGroups>
#+END_EXAMPLE

** Usage

*** Migrate an existing KFS distribution that is located in a local path

#+BEGIN_EXAMPLE

This is actually Deprecated now!!! I decided not to support migration since it's virtually impossible to dig up all the changes
you might have done on your project and move them to your overlay. Instead, I recommend taking your current project, building its 
war, then creating a prototype from it, and an overlay off of that.

Instead, migrate is now going to be used in a different way. See after.


#+END_EXAMPLE

*** Create a new prototype based-on a war file
#+BEGIN_EXAMPLE

svn co https://svn.kuali.org/repos/kfs/trunk kfs
cd kfs
ant dist
mvn -cpu kfs:create-prototype -DgroupId=org.kuali.kfs -DartifactId=kfs -Dversion=5.0 -Dfile=kfs-dev.war

#+END_EXAMPLE

WAR files can be obtained in many ways. One way is to just checkout the KFS project and run ant dist.

*** Create a mavenized KFS distribution from an SVN repository
This is actually Deprecated now!!! I decided not to support migration since it's virtually impossible to dig up all the changes
you might have done on your project and move them to your overlay. Instead, I recommend taking your current project, building its 
war, then creating a prototype from it, and an overlay off of that.

Instead, migrate is now going to be used in a different way. See after.


*** Overlay using simplified GAV syntax
#+BEGIN_EXAMPLE

mvn -cpu kfs:create-overlay -Dgav=org.kualigan:kfs:4.0.0

#+END_EXAMPLE

*** Overlay using more verbose/formal syntax

#+BEGIN_EXAMPLE

mvn -cpu kfs:create-overlay -DgroupId=org.kualigan -DartifactId=kfs -Dversion=4.0.0

#+END_EXAMPLE

*** ROR-style database migrate command

Command to migrate database changes. Will retrieve waiting changes from SCM.

#+BEGIN_EXAMPLE

mvn -cpu kfs:migrate

#+END_EXAMPLE
